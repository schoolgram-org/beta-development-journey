import NS from "../../NetSchoolApi-safe.js";
import Client from "../../classes/Client";
/** Фильтры отчета */
export type Filter = {
    filterId: string;
    filterValue: string | number;
};
/** Параметры отчета */
export type Param = {
    name: string;
    value: string | number;
};
export type Message = {
    type: 1;
    target: "progress";
    arguments: Array<{
        taskId: number;
        status: string;
    }>;
} | {
    type: 1;
    target: "complete";
    arguments: Array<{
        taskId: number;
        data: string;
        componentId: string;
    }>;
} | {
    type: 3;
    invocationId: string;
    result: {
        success: boolean;
        message: any;
    };
} | {
    error: string;
};
/** Параметры для инициализации */
export interface Credentials {
    /** Ссылка для запроса */
    url: string;
    /** Фильтры запроса */
    filters: Filter[];
    /** Идентификатор года отчета */
    yearId?: number;
    /** Время ожидания ответа */
    timeout?: number;
    /** Какой протокол использовать
     *
     * 0 - Web Sockets, 1 - Long Polling
     *
     * если отсутствует, то используется Web Sockets или Long Polling (в зависимости от версии сервера)
     * @deprecated в новых версиях сервера не используется longPolling
     */
    transport?: 0 | 1;
}
/**
 * Формируем задачу
 * @param client клиент
 * @param url ссылка для запроса
 * @param params параметры запроса
 * @param filters фильтры запроса
 * @returns номер задачи
 */
export declare function getTaskId(client: Client, url: string, params: Param[], filters: Filter[]): Promise<number>;
export default function reportFile(this: NS, credentials: Credentials): Promise<string>;
