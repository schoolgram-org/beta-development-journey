"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = default_1;
function default_1(client, school) {
    return __awaiter(this, void 0, void 0, function* () {
        const data = yield Promise.all([
            client
                .get("schools/search")
                .catch(() => client.get("schools/search?name=У"))
                .then((res) => res.json()),
            client
                .get("prepareloginform")
                .then((res) => res.json()),
        ]).catch((e) => {
            console.error(e);
            throw new Error("Не удалось получить список школ");
        });
        if (typeof school === "string")
            school = school.toLowerCase().trim();
        const result = data[0].find(({ id, name, shortName }) => typeof school !== "string"
            ? id == school
            : name.toLowerCase().trim() == school ||
                shortName.toLowerCase().trim() == school);
        if (!result)
            throw new Error("Не удалось найти школу");
        if (typeof school === "string") {
            console.info("\x1b[46m\x1b[30m INFO \x1b[0m", `ID школы: ${result.id}. Советуем в будущем использовать ID школы вместо названия.`);
        }
        return {
            cid: data[1].cid,
            sid: data[1].sid,
            pid: result.provinceId,
            cn: result.cityId,
            sft: 2,
            scid: result.id,
        };
    });
}
//# sourceMappingURL=schoolInfo.js.map