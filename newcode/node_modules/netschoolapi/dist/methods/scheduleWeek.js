"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = default_1;
const Client_1 = __importDefault(require("../classes/Client"));
const ScheduleWeek_1 = __importDefault(require("../classes/ScheduleWeek"));
const dateNum_1 = require("../utils/dateNum");
const checks_1 = require("../utils/checks");
function default_1() {
    return __awaiter(this, arguments, void 0, function* (credentials = {}) {
        const { client, session } = yield checks_1.sessionValid.call(this);
        const { accessToken: at, ver } = session;
        let { date, classId } = credentials;
        if (!date)
            date = new Date();
        else
            checks_1.dateValid.call(this, date);
        const htmlText = yield client
            .post("../asp/Calendar/WeekViewTimeS.asp", Client_1.default.formData({
            at,
            ver,
            date: (0, dateNum_1.date2str)(date),
            PCLID_IUP: checks_1.classIdValid.call(this, classId) + "_0",
            LoginType: 0,
        }))
            .then((res) => res.text());
        return new ScheduleWeek_1.default({
            htmlText,
        });
    });
}
//# sourceMappingURL=scheduleWeek.js.map