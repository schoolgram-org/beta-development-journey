import Attachment, { AttachmentObject, AnswerFilesObject } from "../classes/Attachment";
type Mark = {
    assignmentId: number;
    studentId: number;
    mark: number;
    dutyMark: boolean;
};
type TextAnswer = {
    answer: string;
    answerDate: Date;
};
export interface AssignmentObject {
    id: number;
    typeId: number;
    dueDate: string;
    mark?: Mark;
    markComment?: {
        id: number;
        name: string;
        teacher: string;
        wasRead: boolean;
        editTime: string;
    };
    textAnswer?: TextAnswer;
    attachments: AttachmentObject[];
    answerFiles: AnswerFilesObject[];
    assignmentName: string;
    classMeetingId: number;
}
export default class Assignment {
    id: number;
    dot: boolean;
    text: string;
    mark?: number;
    typeId: number;
    comment?: string;
    lessonId: number;
    attachments: Attachment[];
    private _date;
    private _answer?;
    private _answerAtt;
    constructor(assignment: AssignmentObject);
    get date(): Date;
    get answer(): {
        date: Date;
        text: string;
        attachments: Attachment[];
    } | undefined;
    toJSON(): {
        id: number;
        dot: boolean;
        text: string;
        mark: number | undefined;
        answer: {
            date: Date;
            text: string;
            attachments: {
                id: number;
                name: string;
                date: string | undefined;
                description: string | undefined;
            }[];
        } | undefined;
        typeId: number;
        lessonId: number;
        attachments: {
            id: number;
            name: string;
            date: string | undefined;
            description: string | undefined;
        }[];
    };
}
export {};
