"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = default_1;
const Client_1 = __importDefault(require("../../../classes/Client"));
const authData_1 = __importDefault(require("./authData"));
const schoolInfo_1 = __importDefault(require("./schoolInfo"));
const passwordHash_1 = __importDefault(require("./passwordHash"));
function default_1(client, credentials) {
    return __awaiter(this, void 0, void 0, function* () {
        const { login: un, password, school: schoolCr } = credentials;
        // Сохранение куки
        yield client.get("logindata");
        const [{ lt, ver, salt }, school] = yield Promise.all([
            (0, authData_1.default)(client),
            (0, schoolInfo_1.default)(client, schoolCr),
        ]);
        const { at, timeOut } = yield client
            .post("/login", Client_1.default.formData(Object.assign(Object.assign({ un,
            lt,
            ver, loginType: 1 }, school), (0, passwordHash_1.default)(salt, password))))
            .then((res) => res.json())
            .catch((e) => {
            console.error(e);
            throw new Error("Не удалось войти. Проверьте введение данные.");
        });
        return { at, ver, timeOut };
    });
}
//# sourceMappingURL=signIn.js.map