"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Attachment_1 = __importDefault(require("../classes/Attachment"));
class Assignment {
    constructor(assignment) {
        var _a, _b, _c, _d;
        this.id = assignment.id;
        this.dot = (_b = (_a = assignment.mark) === null || _a === void 0 ? void 0 : _a.dutyMark) !== null && _b !== void 0 ? _b : false;
        this.text = assignment.assignmentName;
        this.mark = (_c = assignment.mark) === null || _c === void 0 ? void 0 : _c.mark;
        this.typeId = assignment.typeId;
        this.comment = (_d = assignment.markComment) === null || _d === void 0 ? void 0 : _d.name;
        this.lessonId = assignment.classMeetingId;
        this.attachments = assignment.attachments.map((a) => new Attachment_1.default(a));
        this._date = assignment.dueDate;
        this._answer = assignment.textAnswer;
        this._answerAtt = assignment.answerFiles.map((a) => new Attachment_1.default(a));
    }
    get date() {
        return new Date(this._date);
    }
    get answer() {
        if (!this._answer)
            return undefined;
        return {
            date: new Date(this._answer.answerDate),
            text: this._answer.answer,
            attachments: this._answerAtt,
        };
    }
    toJSON() {
        const answer = !this._answer
            ? undefined
            : {
                date: this._answer.answerDate,
                text: this._answer.answer,
                attachments: this._answerAtt.map((a) => a.toJSON()),
            };
        return {
            id: this.id,
            dot: this.dot,
            text: this.text,
            mark: this.mark,
            answer,
            typeId: this.typeId,
            lessonId: this.lessonId,
            attachments: this.attachments.map((a) => a.toJSON()),
        };
    }
}
exports.default = Assignment;
//# sourceMappingURL=Assignment.js.map