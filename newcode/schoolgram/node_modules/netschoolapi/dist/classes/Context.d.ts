export interface Term {
    id: number;
    name: string;
    value: string;
    isCurrent: boolean;
    start: Date;
    end: Date;
}
export interface Class {
    id: number;
    name: string;
    value: string;
}
export interface Student {
    id: number;
    name: string;
    value: string;
}
export interface User {
    id: number;
    name: string;
    terms: Term[];
    classes: Class[];
    students: Student[];
}
export interface Year {
    id: number;
    gId: number;
    name: string;
    start: Date;
    end: Date;
}
export interface Server {
    id: string;
    version: string;
    timeFormat: string;
    dateFormat: string;
}
export interface Subject {
    id: number;
    name: string;
}
export interface School {
    id: number;
    name: string;
    fullName: string;
}
export interface Credentials {
    user: User;
    year: Year;
    server: Server;
    school: School;
    subjects: Subject[];
}
export default class Context {
    readonly user: User;
    readonly year: Year;
    readonly server: Server;
    readonly school: School;
    readonly subjects: Subject[];
    constructor(credentials: Credentials);
    /** Проверяет является ли число частью года */
    checkDate(date: Date): boolean;
    /** Существует ли четверть */
    termExists(id: number): boolean;
    /** ID текущей четверти */
    defaultTerm(): Term | undefined;
    /** Получить четверть по ID */
    getTermById(id: number): Term | undefined;
    /** Существует ли класс */
    classExists(id: number): boolean;
    /** ID первого класса */
    defaultClass(): Class | undefined;
    /** Получить класс по ID */
    getClassById(id: number): Class | undefined;
    /** Существует ли ученик */
    studentExists(id: number): boolean;
    /** ID первого ученика */
    defaultStudent(): Student | undefined;
    /** Получить ученика по ID */
    getStudentById(id: number): Student | undefined;
    /** Существует ли предмет */
    subjectExists(id: number): boolean;
    /**
     * Сравнивает версию сервера с указанной
     * @param version Версия сервера с которой сравнивается
     * @returns 1 если указанная версия больше, -1 если меньше, 0 если равны
     */
    compareServerVersion(version: string): 0 | 1 | -1;
}
